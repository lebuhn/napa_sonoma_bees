y = "Estimated Mean Value",
color = "Treatment") +
theme_minimal()
plot_spprich <- ggplot(emm1_df, aes(x = year, y = emmean, color = treatment)) +
geom_point(size = 3) +
geom_line(aes(group = treatment), size = 1) +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
labs(title = "Estimated Marginal Means - Species richness",
x = "Year",
y = "Estimated Mean Value",
color = "Treatment") +
theme_minimal()
plot_spprich
# Plot the results
plot_abund <- ggplot(emm2_df, aes(x = year, y = emmean, color = treatment)) +
geom_point(size = 3) +
geom_line(aes(group = treatment), size = 1) +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
labs(title = "Estimated Marginal Means - Abundance",
x = "Year",
y = "Estimated Mean Value",
color = "Treatment") +
theme_minimal()
plot_abund
plot_spprich
# Convert Year and treatment to factors
sites_summary$treatment <- factor(sites_summary$treatment)
# Fit a Poisson regression model
poisson_model <- glm(no_spp ~ treatment * Year + sampling_events, data = sites_summary, family = "poisson")
# Convert Year and treatment to factors
sites_summary$treatment <- factor(sites_summary$treatment)
# Fit a Poisson regression model
poisson_model <- glm(no_spp ~ treatment * year + sampling_events, data = sites_summary, family = "poisson")
# Summary of the model
summary(poisson_model)
# If overdispersion is present, fit a negative binomial model
nb_model <- glm.nb(no_spp ~ treatment * year + sampling_events, data = sites_summary)
library(MASS)
# Convert Year and treatment to factors
sites_summary$treatment <- factor(sites_summary$treatment)
# Fit a Poisson regression model
poisson_model <- glm(no_spp ~ treatment * year + sampling_events, data = sites_summary, family = "poisson")
# Summary of the model
summary(poisson_model)
# If overdispersion is present, fit a negative binomial model
nb_model <- glm.nb(no_spp ~ treatment * year + sampling_events, data = sites_summary)
# Summary of the negative binomial model
summary(nb_model)
# Extracting p-values
p_values <- summary(nb_model)$coefficients[, "Pr(>|z|)"]
print(p_values)
# Check for overdispersion
overdispersion_test <- sum(residuals(nb_model, type = "pearson")^2) / df.residual(nb_model)
print(paste("Overdispersion ratio:", overdispersion_test))
# Check for overdispersion
overdispersion_test <- sum(residuals(poisson_model, type = "pearson")^2) / df.residual(poisson_model)
print(paste("Overdispersion ratio of poisson:", overdispersion_test))
# Check for overdispersion
overdispersion_test <- sum(residuals(poisson_model, type = "pearson")^2) / df.residual(poisson_model)
print(paste("Overdispersion ratio of poisson:", overdispersion_test)." If this is greater than 1, use a negative binomial model")
print(paste("Overdispersion ratio of poisson:", overdispersion_test)," If this is greater than 1, use a negative binomial model")
# Check for overdispersion
overdispersion_test <- sum(residuals(poisson_model, type = "pearson")^2) / df.residual(poisson_model)
print(paste("Overdispersion ratio of poisson:", overdispersion_test))
## Poisson regression model
# Convert Year and treatment to factors
sites_summary$treatment <- factor(sites_summary$treatment)
# Fit a Poisson regression model
poisson_model <- glm(no_spp ~ treatment * year + sampling_events, data = sites_summary, family = "poisson")
# Summary of the model
summary(poisson_model)
# Check for overdispersion
overdispersion_test <- sum(residuals(poisson_model, type = "pearson")^2) / df.residual(poisson_model)
print(paste("Overdispersion ratio of poisson:", overdispersion_test))
# Fit a negative binomial model
nb_model <- glm.nb(no_spp ~ treatment * year + sampling_events, data = sites_summary)
# Summary of the negative binomial model
summary(nb_model)
# Extracting p-values
p_values <- summary(nb_model)$coefficients[, "Pr(>|z|)"]
print(p_values)
## Poisson regression model
# Convert Year and treatment to factors
sites_summary$treatment <- factor(sites_summary$treatment)
# Fit a Poisson regression model
poisson_model <- glm(no_spp ~ treatment * year + sampling_events, data = sites_summary, family = "poisson")
# Summary of the model
summary(poisson_model)
View(sites_summary)
#| message: true
library(dplyr)
library(tidyr)
library(readr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(emmeans)
library(MASS)
#| echo: true
#| warning: true
bee_data <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_02-19_data.csv", header = T)
bee_traits <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_traits.csv", header = T)
site_data <-read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/sites.csv", header = T)
#| echo: true
#| warning: true
str(bee_data)
unique(bee_data$locality)
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| message: true
library(dplyr)
library(tidyr)
library(readr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(emmeans)
library(MASS)
#| echo: true
#| warning: true
bee_data <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_02-19_data.csv", header = T)
bee_traits <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_traits.csv", header = T)
site_data <-read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/sites.csv", header = T)
#| echo: true
#| warning: true
str(bee_data)
unique(bee_data$locality)
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| echo: true
#| warning: true
bee_data <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_02-19_data.csv", header = T)
bee_traits <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_traits.csv", header = T)
site_data <-read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/sites.csv", header = T)
#| echo: true
#| warning: true
str(bee_data)
unique(bee_data$locality)
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
bee_data_clean <- bee_data %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site))
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number) %>%
mutate(site= case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
locality %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site))
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number)
bee_data_clean <- bee_data %>%
mutate(locality= case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(locality = case_when (
locality %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, locality, start_date, type, year, number) %>%
filter (locality %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
bee_data_clean <- bee_data %>%
mutate(locality= case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(locality = case_when (
locality %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site))
bee_data_clean <- bee_data %>%
mutate(site= case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ site)) %>%
mutate(site = case_when (
locality %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site))
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (
site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number)
#| message: true
library(dplyr)
library(tidyr)
library(readr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(emmeans)
library(MASS)
#| echo: true
#| warning: true
bee_data <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_02-19_data.csv", header = T)
bee_traits <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_traits.csv", header = T)
site_data <-read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/sites.csv", header = T)
#| echo: true
#| warning: true
str(bee_data)
unique(bee_data$locality)
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
head(bee_data_clean)
#create new variable that combines the genus and species name
bee_data_clean$combined_name <- paste(bee_data_clean$genus_name,bee_data_clean$species, sep=" ")
#Check that samples are still correct
bee_data_clean %>%
group_by(site) %>%
summarize(count_bees = sum(number))
bee_data %>%
group_by(locality) %>%
summarize(count_bees = sum(number))
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y")  %>%
select (genus_name, species, site, start_date, type, year, number))
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y")  %>%
select (genus_name))
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select ( site, start_date,year, ) %>%
#select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (., site, start_date,year, ) %>%
#select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
mutate(site = case_when (locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo", TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ site)) %>%
select (bee_data, site, start_date,year, ) %>%
#select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
mutate(site = case_when(
locality %in% c("Wappo Hill", "Wappo hill") ~ "Wappo",
TRUE ~ locality
)) %>%
mutate(site = case_when(
site %in% c("Stag's leap", "Stag's Leap") ~ "StagsLeap",
TRUE ~ site
)) %>%
select(site, start_date, year) %>%
filter(site %in% sampled_localities) %>%
filter(!(year %in% c(2001))) %>%
mutate(start_date = as.Date(start_date, format = "%m/%d/%y"))
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
mutate(site = case_when(
locality %in% c("Wappo Hill", "Wappo hill") ~ "Wappo",
TRUE ~ locality
)) %>%
mutate(site = case_when(
site %in% c("Stag's leap", "Stag's Leap") ~ "StagsLeap",
TRUE ~ site
))
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
mutate(site = case_when(
locality %in% c("Wappo Hill", "Wappo hill") ~ "Wappo",
TRUE ~ locality
)) %>%
mutate(site = case_when(
site %in% c("Stag's leap", "Stag's Leap") ~ "StagsLeap",
TRUE ~ site
)
)
?mutate
??mutate
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number) %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo",
TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ locality))
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number)
#| message: true
library(dplyr)
library(tidyr)
library(readr)
library(lme4)
library(lmerTest)
library(ggplot2)
library(emmeans)
library(MASS)
#| echo: true
#| warning: true
bee_data <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_02-19_data.csv", header = T)
bee_traits <- read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/bee_traits.csv", header = T)
site_data <-read.csv("/Users/gretchen/Library/CloudStorage/Box-Box/1. Lab research/napabees/2024_update/data/raw/sites.csv", header = T)
#| echo: true
#| warning: true
str(bee_data)
unique(bee_data$locality)
#| echo: true
#| warning: true
sampled_localities <- c("Bouverie Preserve",
"Hudson",
"Saintsbury",
"Goode",
"StagsLeap",
"Wappo",
"Quintessa",
"Veteran's Home")
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number) %>%
mutate(site = case_when (
locality %in% c("Wappo Hill", "Wappo hill" ) ~ "Wappo",
TRUE ~ locality)) %>%
mutate(site = case_when (site %in% c("Stag's leap", "Stag's Leap" ) ~ "StagsLeap", TRUE ~ locality)) %>%
select (genus_name, species, site, start_date, type, year, number) %>%
filter (site %in% sampled_localities ) %>%
filter(!(year %in% c(2001))) %>%
mutate (start_date = as.Date(start_date, format="%m/%d/%y") )
bee_data_clean <- bee_data %>%
select (genus_name, species, locality, start_date, type, year, number)
# Check if bee_data exists
if (exists("bee_data")) {
# Check the column names
print(colnames(bee_data))
# Clean the data by selecting the desired columns
bee_data_clean <- bee_data %>%
select(genus_name, species, locality, start_date, type, year, number)
# View the cleaned data
head(bee_data_clean)
} else {
stop("bee_data does not exist.")
}
